"""Event constants."""
from collections.abc import Mapping



from ..command import Command
from ..commands.json import (
    GetAdvancedMode,
    GetBattery,
    GetCachedMapInfo,
    GetCarpetAutoFanBoost,
    GetChargeState,
    GetCleanCount,
    GetCleanInfo,
    GetCleanInfoV2,
    GetCleanLogs,
    GetCleanPreference,
    GetContinuousCleaning,
    GetError,
    GetFanSpeed,
    GetLifeSpan,
    GetGoatLifeSpan,
    GetMajorMap,
    GetMapTrace,
    GetMultimapState,
    GetPos,
    GetStats,
    GetTotalStats,
    GetTrueDetect,
    GetVolume,
    GetWaterInfo,
    GetAnimProtect,
    GetProtectState,
    GetSafeProtect,
    GetBorderSwitch,
    GetRecognization,
    GetChildLock,
    GetMoveupWarning,
    GetCrossMapBorderWarning,
    GetCutDirection,
    GetWifiList,
    GetObstacleHeight,
    GetRainDelay,
)
from . import (
    AdvancedModeEvent,
    AvailabilityEvent,
    BatteryEvent,
    CarpetAutoFanBoostEvent,
    CleanCountEvent,
    CleanLogEvent,
    CleanPreferenceEvent,
    ContinuousCleaningEvent,
    CustomCommandEvent,
    ErrorEvent,
    Event,
    FanSpeedEvent,
    LifeSpanEvent,
    GoatLifeSpanEvent,
    MultimapStateEvent,
    PositionsEvent,
    ReportStatsEvent,
    RoomsEvent,
    StateEvent,
    StateEventV2,
    StatsEvent,
    TotalStatsEvent,
    TrueDetectEvent,
    VolumeEvent,
    WaterInfoEvent,
    AnimProtectEvent,
    ProtectStateEvent,
    SafeProtectEvent,
    BorderSwitchEvent,
    RecognizationEvent,
    ChildLockEvent,
    MoveupWarningEvent,
    CrossMapBorderWarningEvent,
    CutDirectionEvent,
    WifiInfoEvent,
    ObstacleHeightEvent,
    NewUWBCellEvent,
    RainDelayEvent
)
from .map import (
    CachedMapInfoEvent,
    MajorMapEvent,
    MapSetEvent,
    MapSubsetEvent,
    MapTraceEvent,
    MinorMapEvent,
)

EVENT_DTO_REFRESH_COMMANDS: Mapping[type[Event], list[Command]] = {
    AvailabilityEvent: [],
    AdvancedModeEvent: [GetAdvancedMode()],
    BatteryEvent: [GetBattery()],
    CachedMapInfoEvent: [GetCachedMapInfo()],
    CarpetAutoFanBoostEvent: [GetCarpetAutoFanBoost()],
    CleanLogEvent: [GetCleanLogs()],
    CleanCountEvent: [GetCleanCount()],
    CleanPreferenceEvent: [GetCleanPreference()],
    ContinuousCleaningEvent: [GetContinuousCleaning()],
    CustomCommandEvent: [],
    ErrorEvent: [GetError()],
    FanSpeedEvent: [GetFanSpeed()],
    LifeSpanEvent: [GetLifeSpan()],
    GoatLifeSpanEvent: [GetGoatLifeSpan()],
    MajorMapEvent: [GetMajorMap()],
    MapSetEvent: [],
    MapSubsetEvent: [],
    MapTraceEvent: [GetMapTrace()],
    MinorMapEvent: [],
    MultimapStateEvent: [GetMultimapState()],
    PositionsEvent: [GetPos()],
    ReportStatsEvent: [],  # ReportStats cannot be pulled
    RoomsEvent: [GetCachedMapInfo()],
    StatsEvent: [GetStats()],
    StateEvent: [GetChargeState(), GetCleanInfo()],
    StateEventV2: [GetChargeState(), GetCleanInfoV2()],
    TotalStatsEvent: [GetTotalStats()],
    TrueDetectEvent: [GetTrueDetect()],
    VolumeEvent: [GetVolume()],
    WaterInfoEvent: [GetWaterInfo()],
    AnimProtectEvent: [GetAnimProtect()],
    ProtectStateEvent: [GetProtectState()],
    SafeProtectEvent: [GetSafeProtect()],
    BorderSwitchEvent: [GetBorderSwitch()],
    RecognizationEvent: [GetRecognization()],
    ChildLockEvent: [GetChildLock()],
    MoveupWarningEvent: [GetMoveupWarning()],
    CrossMapBorderWarningEvent: [GetCrossMapBorderWarning()],
    CutDirectionEvent: [GetCutDirection()],
    WifiInfoEvent: [GetWifiList()],
    ObstacleHeightEvent: [GetObstacleHeight()],
    NewUWBCellEvent: [], # runs once, no refresh needed
    RainDelayEvent: [GetRainDelay()],
}
